{
  "xlsx": {
    "survey": [
      {
        "type": "text",
        "name": "household_id",
        "display": {
          "text": "Unique barcode ID or locator designation for this household"
        },
        "_row_num": 2
      },
      {
        "type": "integer",
        "name": "num_rooms",
        "display": {
          "text": "How many rooms does the house contain?"
        },
        "_row_num": 3
      },
      {
        "type": "select_one",
        "values_list": "yesno",
        "name": "electricity",
        "display": {
          "text": "Does the house have electricity?"
        },
        "_row_num": 4
      },
      {
        "type": "select_one",
        "values_list": "yesno",
        "name": "water",
        "display": {
          "text": "Does the house have running water?"
        },
        "_row_num": 5
      },
      {
        "type": "geopoint",
        "name": "location",
        "display": {
          "text": "Capture the household location."
        },
        "_row_num": 6
      },
      {
        "type": "linked_table",
        "display": {
          "text": "Household members:",
          "hint": "listing of linked forms displays the value of the field specified in the linekd form's instance_name setting field within a button. Click that button to edit that linked form."
        },
        "linked_form_id": "household_member",
        "selection": "household_id = ?",
        "selectionArgs": "[ data('household_id') ]",
        "auxillaryHash": "'household_id='+escape(data('household_id'))",
        "comments": "auxillaryHash defines the auxillary hash to supply when creating a new sub-form. This is an ampersand-separated list of elementName=value pairs that will be used to initialize the subform. The joined_through_name value identifies the name (elementName) in the model that should be used when scanning in the joins lists for the table_id to discover the foreign key column to filter on in the subform.\n\nIf this is omitted, we would probably just scan the entire model to see if table_id appears anywhere and use the first match we find.",
        "_row_num": 7
      },
      {
        "type": "text",
        "name": "owner",
        "display": {
          "text": "Who is the owner of the household?"
        },
        "_row_num": 8
      }
    ],
    "choices": [
      {
        "choice_list_name": "yesno",
        "data_value": "yes",
        "display": {
          "text": "yes"
        },
        "_row_num": 2
      },
      {
        "choice_list_name": "yesno",
        "data_value": "no",
        "display": {
          "text": "no"
        },
        "_row_num": 3
      },
      {
        "choice_list_name": "sexes",
        "data_value": "male",
        "display": {
          "text": "male"
        },
        "_row_num": 5
      },
      {
        "choice_list_name": "sexes",
        "data_value": "female",
        "display": {
          "text": "female"
        },
        "_row_num": 6
      }
    ],
    "settings": [
      {
        "setting_name": "form_id",
        "value": "household_new",
        "_row_num": 2
      },
      {
        "setting_name": "form_version",
        "value": 20130408,
        "_row_num": 3
      },
      {
        "setting_name": "table_id",
        "value": "household",
        "_row_num": 4
      },
      {
        "setting_name": "survey",
        "display": {
          "title": "Household Survey"
        },
        "_row_num": 5
      }
    ],
    "model": [
      {
        "name": "household_id",
        "type": "string",
        "joins": [
          {
            "table_id": "household_member",
            "element_name": "household_id"
          }
        ],
        "comments": "This inserts a 'joins' entry into the column_definitions table for the household_id column of the household table_id of the form: \n\n\"[ { table_id: household_member, element_name: household_id } ]\"",
        "_row_num": 2
      }
    ]
  },
  "specification": {
    "column_types": {
      "_screen_block": "function",
      "condition": "formula",
      "constraint": "formula",
      "required": "formula",
      "calculation": "formula",
      "auxillaryHash": "formula",
      "selectionArgs": "formula",
      "uri": "formula",
      "callback": "formula",
      "choice_filter": "formula(context)",
      "templatePath": "requirejs_path",
      "image": "app_path_localized",
      "audio": "app_path_localized",
      "video": "app_path_localized"
    },
    "settings": {
      "form_id": {
        "setting_name": "form_id",
        "value": "household_new",
        "_row_num": 2
      },
      "form_version": {
        "setting_name": "form_version",
        "value": 20130408,
        "_row_num": 3
      },
      "table_id": {
        "setting_name": "table_id",
        "value": "household",
        "_row_num": 4
      },
      "survey": {
        "setting_name": "survey",
        "display": {
          "title": "Household Survey"
        },
        "_row_num": 5
      },
      "_locales": {
        "setting_name": "_locales",
        "_row_num": 5,
        "value": [
          {
            "display": {
              "text": "default"
            },
            "name": "default"
          }
        ]
      },
      "_default_locale": {
        "setting_name": "_default_locale",
        "_row_num": 5,
        "value": "default"
      },
      "initial": {
        "setting_name": "survey",
        "display": {
          "title": "Household Survey"
        },
        "_row_num": 5
      }
    },
    "choices": {
      "yesno": [
        {
          "choice_list_name": "yesno",
          "data_value": "yes",
          "display": {
            "text": "yes"
          },
          "_row_num": 2
        },
        {
          "choice_list_name": "yesno",
          "data_value": "no",
          "display": {
            "text": "no"
          },
          "_row_num": 3
        }
      ],
      "sexes": [
        {
          "choice_list_name": "sexes",
          "data_value": "male",
          "display": {
            "text": "male"
          },
          "_row_num": 5
        },
        {
          "choice_list_name": "sexes",
          "data_value": "female",
          "display": {
            "text": "female"
          },
          "_row_num": 6
        }
      ]
    },
    "queries": {},
    "calculates": {},
    "model": {
      "household_id": {
        "type": "string",
        "_defn": [
          {
            "_row_num": 2,
            "section_name": "survey"
          },
          {
            "_row_num": 2,
            "section_name": "model"
          }
        ],
        "joins": [
          {
            "table_id": "household_member",
            "element_name": "household_id"
          }
        ],
        "elementKey": "household_id"
      },
      "num_rooms": {
        "_defn": [
          {
            "_row_num": 3,
            "section_name": "survey"
          }
        ],
        "type": "integer",
        "elementKey": "num_rooms"
      },
      "electricity": {
        "_defn": [
          {
            "_row_num": 4,
            "section_name": "survey"
          }
        ],
        "type": "string",
        "elementKey": "electricity"
      },
      "water": {
        "_defn": [
          {
            "_row_num": 5,
            "section_name": "survey"
          }
        ],
        "type": "string",
        "elementKey": "water"
      },
      "location": {
        "_defn": [
          {
            "_row_num": 6,
            "section_name": "survey"
          }
        ],
        "type": "object",
        "elementType": "geopoint",
        "properties": {
          "latitude": {
            "type": "number",
            "elementKey": "location_latitude"
          },
          "longitude": {
            "type": "number",
            "elementKey": "location_longitude"
          },
          "altitude": {
            "type": "number",
            "elementKey": "location_altitude"
          },
          "accuracy": {
            "type": "number",
            "elementKey": "location_accuracy"
          }
        },
        "elementKey": "location"
      },
      "owner": {
        "_defn": [
          {
            "_row_num": 8,
            "section_name": "survey"
          }
        ],
        "type": "string",
        "elementKey": "owner"
      }
    },
    "section_names": [
      "initial",
      "survey"
    ],
    "sections": {
      "survey": {
        "section_name": "survey",
        "nested_sections": {},
        "reachable_sections": {},
        "prompts": [
          {
            "type": "text",
            "name": "household_id",
            "display": {
              "text": "Unique barcode ID or locator designation for this household"
            },
            "_row_num": 2,
            "__rowNum__": 1,
            "_token_type": "prompt",
            "_type": "text",
            "_branch_label_enclosing_screen": "survey/_screen2",
            "promptIdx": 0
          },
          {
            "type": "integer",
            "name": "num_rooms",
            "display": {
              "text": "How many rooms does the house contain?"
            },
            "_row_num": 3,
            "__rowNum__": 2,
            "_token_type": "prompt",
            "_type": "integer",
            "_branch_label_enclosing_screen": "survey/_screen3",
            "promptIdx": 1
          },
          {
            "type": "select_one",
            "values_list": "yesno",
            "name": "electricity",
            "display": {
              "text": "Does the house have electricity?"
            },
            "_row_num": 4,
            "__rowNum__": 3,
            "_token_type": "prompt",
            "_type": "select_one",
            "_branch_label_enclosing_screen": "survey/_screen4",
            "promptIdx": 2
          },
          {
            "type": "select_one",
            "values_list": "yesno",
            "name": "water",
            "display": {
              "text": "Does the house have running water?"
            },
            "_row_num": 5,
            "__rowNum__": 4,
            "_token_type": "prompt",
            "_type": "select_one",
            "_branch_label_enclosing_screen": "survey/_screen5",
            "promptIdx": 3
          },
          {
            "type": "geopoint",
            "name": "location",
            "display": {
              "text": "Capture the household location."
            },
            "_row_num": 6,
            "__rowNum__": 5,
            "_token_type": "prompt",
            "_type": "geopoint",
            "_branch_label_enclosing_screen": "survey/_screen6",
            "promptIdx": 4
          },
          {
            "type": "linked_table",
            "display": {
              "text": "Household members:",
              "hint": "listing of linked forms displays the value of the field specified in the linekd form's instance_name setting field within a button. Click that button to edit that linked form."
            },
            "linked_form_id": "household_member",
            "selection": "household_id = ?",
            "selectionArgs": "[ data('household_id') ]",
            "auxillaryHash": "'household_id='+escape(data('household_id'))",
            "comments": "auxillaryHash defines the auxillary hash to supply when creating a new sub-form. This is an ampersand-separated list of elementName=value pairs that will be used to initialize the subform. The joined_through_name value identifies the name (elementName) in the model that should be used when scanning in the joins lists for the table_id to discover the foreign key column to filter on in the subform.\n\nIf this is omitted, we would probably just scan the entire model to see if table_id appears anywhere and use the first match we find.",
            "_row_num": 7,
            "__rowNum__": 6,
            "_token_type": "prompt",
            "_type": "linked_table",
            "_branch_label_enclosing_screen": "survey/_screen7",
            "promptIdx": 5
          },
          {
            "type": "text",
            "name": "owner",
            "display": {
              "text": "Who is the owner of the household?"
            },
            "_row_num": 8,
            "__rowNum__": 7,
            "_token_type": "prompt",
            "_type": "text",
            "_branch_label_enclosing_screen": "survey/_screen8",
            "promptIdx": 6
          },
          {
            "_token_type": "prompt",
            "type": "contents",
            "_type": "contents",
            "_row_num": 9,
            "_branch_label_enclosing_screen": "survey/_screen9",
            "promptIdx": 7
          }
        ],
        "validation_tag_map": {
          "finalize": []
        },
        "operations": [
          {
            "_row_num": 2,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(0);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 0
          },
          {
            "_row_num": 3,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(1);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 1
          },
          {
            "_row_num": 4,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(2);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 2
          },
          {
            "_row_num": 5,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(3);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 3
          },
          {
            "_row_num": 6,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(4);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 4
          },
          {
            "_row_num": 7,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(5);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 5
          },
          {
            "_row_num": 8,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(6);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 6
          },
          {
            "_token_type": "exit_section",
            "clause": "exit section",
            "_row_num": 9,
            "operationIdx": 7
          },
          {
            "_row_num": 9,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(7);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 8
          },
          {
            "_token_type": "back_in_history",
            "_row_num": 9,
            "operationIdx": 9
          }
        ],
        "branch_label_map": {
          "_screen2": 0,
          "_screen3": 1,
          "_screen4": 2,
          "_screen5": 3,
          "_screen6": 4,
          "_screen7": 5,
          "_screen8": 6,
          "_contents": 8,
          "_screen9": 8
        }
      },
      "initial": {
        "section_name": "initial",
        "nested_sections": {
          "survey": true
        },
        "reachable_sections": {
          "survey": true
        },
        "prompts": [
          {
            "_row_num": 3,
            "type": "opening",
            "display": {
              "text": "Edit form"
            },
            "_token_type": "prompt",
            "_type": "opening",
            "_branch_label_enclosing_screen": "initial/_screen3",
            "promptIdx": 0
          },
          {
            "_row_num": 4,
            "clause": "do section survey",
            "_token_type": "prompt",
            "_do_section_name": "survey",
            "_type": "_section",
            "promptIdx": 1,
            "display": {
              "title": "Household Survey"
            },
            "_branch_label_enclosing_screen": "survey/_contents"
          },
          {
            "_row_num": 5,
            "type": "finalize",
            "display": {
              "text": "Save form"
            },
            "_token_type": "prompt",
            "_type": "finalize",
            "_branch_label_enclosing_screen": "initial/_screen5",
            "promptIdx": 2
          },
          {
            "_row_num": 7,
            "type": "instances",
            "display": {
              "text": "Saved instances"
            },
            "_token_type": "prompt",
            "_type": "instances",
            "_branch_label_enclosing_screen": "initial/_screen7",
            "promptIdx": 3
          },
          {
            "_token_type": "prompt",
            "type": "contents",
            "_type": "contents",
            "_row_num": 9,
            "_branch_label_enclosing_screen": "initial/_screen9",
            "promptIdx": 4
          }
        ],
        "validation_tag_map": {
          "finalize": []
        },
        "operations": [
          {
            "_row_num": 2,
            "clause": "if // start",
            "condition": "(opendatakit.getCurrentInstanceId() != null)",
            "_token_type": "goto_label",
            "_tag_name": "start",
            "_branch_label": "_then2",
            "operationIdx": 0
          },
          {
            "clause": "else // start",
            "_token_type": "goto_label",
            "_branch_label": "_else6",
            "_row_num": 6,
            "operationIdx": 1
          },
          {
            "_row_num": 3,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(0);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 2
          },
          {
            "_row_num": 4,
            "clause": "do section survey",
            "_token_type": "do_section",
            "_do_section_name": "survey",
            "operationIdx": 3
          },
          {
            "_row_num": 5,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(2);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 4
          },
          {
            "clause": "end if // start",
            "_token_type": "goto_label",
            "_branch_label": "_endif8",
            "_row_num": 8,
            "operationIdx": 5
          },
          {
            "_row_num": 7,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(3);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 6
          },
          {
            "_token_type": "exit_section",
            "clause": "exit section",
            "_row_num": 9,
            "operationIdx": 7
          },
          {
            "_row_num": 9,
            "_token_type": "begin_screen",
            "_screen_block": "function() {var activePromptIndicies = [];\nactivePromptIndicies.push(4);\n\nreturn activePromptIndicies;\n}\n",
            "operationIdx": 8
          },
          {
            "_token_type": "back_in_history",
            "_row_num": 9,
            "operationIdx": 9
          }
        ],
        "branch_label_map": {
          "_then2": 2,
          "_screen3": 2,
          "_screen5": 4,
          "_else6": 6,
          "_screen7": 6,
          "_endif8": 7,
          "_contents": 8,
          "_screen9": 8
        }
      }
    }
  }
}
